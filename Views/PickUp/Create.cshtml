@model CharityMS.ViewModels.PickUpVM
@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Pick Up</h4>
<hr />
<div>
    <form id="createForm" asp-action="Create">

        <div class="form-group row mb-2">
            <label asp-for="Location" class="col-form-label col-lg-3 col-sm-12">
                Loaction<span class="text-danger">*</span> :
            </label>
            <div class="col-lg-5 col-md-9 col-sm-12">
                <input asp-for="Location" class="form-control">
                <span id="invalid-location" class="text-danger" style="display:none">The Location is Required.</span>
            </div>
        </div>

        <div class="form-group row mb-2">
            <label asp-for="EstimatiedPickUpDate" class="col-form-label col-lg-3 col-sm-12">
                Estimatied PickUp Date<span class="text-danger">*</span> :
            </label>
            <div class="col-lg-5 col-md-9 col-sm-12">
                <input asp-for="EstimatiedPickUpDate" class="form-control" type="date" min="@DateTime.Now">
                <span id="invalid-date" class="text-danger" style="display:none">The EstimatiedPickUpDate is Required.</span>
            </div>
        </div>

        <div class=" mb-2">
            <div class="card">
                <div class="card-header">
                    Request Item <span class="text-danger">*</span> :
                </div>
                <div class="card-body">
                    <div id="editorRows">
                        @foreach (var item in Model.Donations)
                        {
                            <partial name="_DonationItem" asp-for="item" />
                        }
                    </div>
                    <a id="addItem" asp-controller="Donations" asp-action="BlankItem" class="btn btn-primary btn-sm">Add Item</a>
                </div>
            </div>
            <span id="invalid-item" class="text-danger" style="display:none">The Item Name and Quantity are Required.</span>

        </div>

        <div class="form-group">
            <input id="submit" type="submit" value="Create" class="btn btn-primary" style="width:120px" />
            <a asp-action="Index" class="btn btn-secondary" style="width:120px">Back</a>
        </div>
    </form>
</div>

@section scripts {
    <script>
        $("#submit").click(function (e) {
            e.preventDefault();
            var formData = new FormData();
            
            $("input[name='Location']").each(function (i) {
                var Location = $(this).val();
                if (Location == "") {
                    $("#invalid-location").show();
                }
                else {
                    $("#invalid-location").hide();

                }
                formData.append("vm.Location", Location);
            });


            $("input[name='EstimatiedPickUpDate']").each(function (i) {
                var EstimatiedPickUpDate = $(this).val();
                if (EstimatiedPickUpDate == "") {
                    $("#invalid-date").show();
                }
                else {
                    $("#invalid-date").hide();

                }
                formData.append("vm.EstimatiedPickUpDate", EstimatiedPickUpDate);

            });

            let valid = true;

            $("input[name='ItemName']").each(function (i) {
                var ItemName = $(this).val();
                if (ItemName == "") {
                    valid = false;
                }

                formData.append("vm.Donations[" + i + "].ItemName", ItemName);
            });

            $("input[name='Quantity']").each(function (i) {
                var Quantity = $(this).val();
                if (Quantity < 1) {
                    valid = false;
                }

                formData.append("vm.Donations[" + i + "].Quantity", Quantity);
            });

            if (valid) {
                $("#invalid-item").hide();
                $.ajax({
                    method: 'post',
                    url: "/PickUp/Create",
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function (data) {
                        if (data.result == -1) {
                            Swal.fire({
                                icon: 'error',
                                title: 'Oops...',
                                text: data.message
                            })
                        }
                        else {
                            Swal.fire({
                                icon: 'success',
                                title: 'Congratulations',
                                text: data.message
                            }).then(function () {
                                location.href = '@Url.Action("Index", "PickUp")';
                            });
                        }
                    }
                });
            } else {
                $("#invalid-item").show();
            }
        });

        $("#addItem").click(function () {
            $.ajax({
                url: this.href,
                cache: false,
                success: function (html) {
                    $("#editorRows").append(html);
                    $(".deleteRow").click(function () {
                        $(this).parents("div.editorRow:first").remove();
                        return false;
                    });
                }
            });
            return false;
        });


    </script>
}